// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  username                String      @id
  displayname             String
  password                String
  permissions             Json?
  admin                   Boolean     @default(false)
  register_date           DateTime    @default(now())
  register_ip             String?
  lastlogin_date          DateTime?
  lastlogin_ip            String?
  registered_currents     Current[]
  registered_curr_act     CurrentActivity[]
  registered_stocks       Stock[]
  registered_orders       Order[]
  old_password            String?
}

model Current {
  id                    Int           @id @default(autoincrement())
  name                  String
  current_type          String?
  address               String?
  province              String?
  district              String?
  tax_office            String?
  tax_no                String?
  identification_no     String?
  phone                 String?
  phone_2               String?
  mail                  String?
  description           String?
  code_1                String?
  code_2                String?
  code_3                String?
  code_4                String?
  registry_date         DateTime      @default(now())
  registry_username     String?
  registry_user         User?         @relation(references: [username], fields: [registry_username])
  update_date           DateTime      @default(now())
  update_username       String?
  activities            CurrentActivity[]
  orders                Order[]
}

model CurrentActivity {
  id                    Int         @id @default(autoincrement())
  current_id            Int
  current               Current     @relation(fields: [current_id], references: [id], onDelete: Cascade)
  date                  DateTime
  expiry_date           DateTime
  description           String?
  balance               Float
  registry_date         DateTime
  registry_username     String?
  registry_user         User?       @relation(references: [username], fields: [registry_username])
  update_date           DateTime    @default(now())
  update_username       String?
}

model Stock {
  id                    Int         @id @default(autoincrement())
  name                  String
  material              String?
  product_group         String?
  unit                  String?
  unit_2                String?
  conversion_rate       Float?
  buy_price             Float?
  sell_price            Float?
  code_1                String?
  code_2                String?
  code_3                String?
  code_4                String?
  registry_date         DateTime
  registry_username     String?
  registry_user         User?       @relation(references: [username], fields: [registry_username])
  update_date           DateTime    @default(now())
  update_username       String?
  orders                OrderItem[]
}

model Order {
  id                    Int         @id @default(autoincrement())
  current_id            Int
  current               Current     @relation(references: [id], fields: [current_id])
  date                  DateTime    @default(now())
  delivery_date         DateTime    @default(now())
  order_source          String?
  invoiced              Boolean     @default(false)
  printed               Boolean     @default(false)
  total_fee             Float
  code_1                String?
  code_2                String?
  code_3                String?
  code_4                String?
  registry_date         DateTime    @default(now())
  registry_username     String?
  registry_user         User?       @relation(references: [username], fields: [registry_username])
  update_date           DateTime    @default(now())
  update_username       String?
  items                 OrderItem[]
}

model OrderItem {
  id                    Int         @id @default(autoincrement())
  row                   Int?
  order_id              Int
  order                 Order       @relation(references: [id], fields: [order_id], onDelete: Cascade)
  stock_id              Int
  stock                 Stock       @relation(references: [id], fields: [stock_id])
  unit                  String?
  amount                Float
  tax_rate              Float?
  description           String?
  registry_date         DateTime    @default(now())
  registry_username     String?
}
